# Michael E. Sparks (michael.sparks2@usda.gov), 14 January 2021

# *** this workflow uses the ParaFly scheduler, available in the
# Trinity RNA-Seq assembler distribution:
# trinityrnaseq-v2.10.0/trinity-plugins/ParaFly-0.1.0/bin/ParaFly
# Please make sure it's listed on your $PATH and edit the 
# -CPU argument to suit your shared-memory multiprocessor system.
# Reformulations using something like GNU parallel should be
# possible, too.

# set these envars according to your own installation
# (see genomethreader manual for details)
export PATH="/your/path/to/gth-1.7.3-Linux_x86_64-64bit/bin/:$PATH"
export BSSMDIR="/your/path/to/gth-1.7.3-Linux_x86_64-64bit/bin/bssm"
export GTHDATADIR="/your/path/to/gth-1.7.3-Linux_x86_64-64bit/bin/gthdata"

# we will align NCBI-predicted proteins of at least 100aa's...
cat ../NCBI_annots/GCF_000151625.1_ASM15162v1_protein.faa | \
  ../filter_fasta_by_length.pl 100 | ../merge_fasta.pl \
  > bmori_prot.min100.fpa

# ...to hard-masked genomic contigs of at least 100Kb in length
mkdir split_gdna
cd split_gdna
cat ../../NCBI_annots/GCF_000151625.1_ASM15162v1_genomic.fna | \
  ../../filter_fasta_by_length.pl 100000 | \
  ../../merge_fasta.pl | \
  perl -e 'while(<>){if($_!~/^>/){$_=~tr/acgt/N/;}print $_;}' | \
  tee ../GCF_000151625.1_ASM15162v1_genomic_hmask100Kmin.fna | \
  ../split_fasta_file_noIndex.pl
cd -

for g in split_gdna/*.fas; do
  gth -genomic $g -createindicesonly -protein bmori_prot.min100.fpa
done

# aligning with gth takes several hours on my system;
# consider scheduling it to run during overnight/ after hours.
# gth's built-in drosophila paramters are probably the closest
# approximation to the silkworm's own splicing system.
mkdir intermediate
for g in `find split_gdna/ -name "*.fas"`; do
  h=`basename ${g} .fas`
  echo "gth \
-genomic $g \
-protein bmori_prot.min100.fpa \
-species drosophila \
-paralogs \
-skipindexcheck \
-intermediate -xmlout -gzip \
-o intermediate/${h}.SAonly.xml.gz \
> intermediate/${h}.SAonly.xml.gz.log 2>&1"
done > commands.1.list && ParaFly -c commands.1.list -CPU 64 -v

# Computing consensus models with gth takes some time, too.
# Here, we don't do a global consensus:
# a) developing consensus seqs across severed gdna templates
#    (something akin to scaffold gaps) is problematic, and
# b) BSSM4GSQ can't handle such formats, anyhow
mkdir consensus
for g in `find split_gdna/ -name "*.fas"`; do
  h=`basename ${g} .fas`
  echo "gthconsensus \
-xmlout \
-o consensus/${h}.con.xml.gz \
-gzip intermediate/${h}.SAonly.xml.gz"
done > commands.2.list && ParaFly -c commands.2.list -CPU 64 -v

gunzip consensus/*.xml.gz # b/c BSSM4GSQ doesn't handle gzip'ed files

# Caution|Achtung|Xiao3Xin1|Cuidado: as of at least v1.7.3,
# genomethreader has forked quite a bit since BSSM4GSQ was first
# written (the C code for which was integrated into gth), so we
# need to retrofit BSSM4GSQ to harmonize with the current system.
# I prefer BSSM4GSQ, which allows for updating GENESEQER
# (and whose plumbing I'm more familiar with, in particular
# because I wrote it). Others may prefer gthbssmtrain.
# Both approaches are demonstrated.

# If you go the BSSM4GSQ route, please consider citing the
# following reference:
#
#   Sparks, M.E. and Brendel, V. (2005) Incorporation of splice site
#   probability models for non-canonical introns improves gene structure
#   prediction in plants. Bioinformatics. 21:iii20-iii30.

# An obvious question arises here: why build training data with
# either, when we could just use the NCBI gene annotations
# at face value? The reason is I'm more confident in high
# quality gene models that have survived the scrutiny of a
# gth/gsq/gsq2 run, at least for harvesting data with which to
# train the statistical model.
# So, we'll see how to bootstrap these ourselves.
# Practitioners who disagree can prepare splice site model
# training data by their own prefered means and then skip
# ahead to the training steps.

# see p.32 of the gth manual
gth \
-genomic GCF_000151625.1_ASM15162v1_genomic_hmask100Kmin.fna \
-protein bmori_prot.min100.fpa \
-species drosophila \
-paralogs \
-skipalignmentout \
-gff3out \
-md5ids \
-o allprot_vs_allgdna.gff3

# I had to manually adjust the gff3 file and restart a handful of
# times, due to problematic genes that caused gth to crash.
gthbssmtrain \
  -seqfile GCF_000151625.1_ASM15162v1_genomic_hmask100Kmin.fna \
  allprot_vs_allgdna.gff3
# ``training_data/" dir is created by gthbssmtrain, by default
gthbssmbuild \
  -datapath `pwd`/training_data/ \
  -bssmfile Bombyx_mori_gth.bssm \
  -gtdonor -gcdonor -agacceptor

# the md5 identifiers needed below were created in the gth alignment step above.
# these could also be generated by the following call:
#gth \
#-genomic GCF_000151625.1_ASM15162v1_genomic_hmask100Kmin.fna \
#-protein bmori_prot.min100.fpa \
#-createindicesonly

# build md5 id mapping (for adjusting BSSM4GSQ output to suit gthbssmbuild)
paste -d ':' \
  <(strings GCF_000151625.1_ASM15162v1_genomic_hmask100Kmin.fna.md5 | \
    sed 's/^/md5:/') \
  <(grep '^>' GCF_000151625.1_ASM15162v1_genomic_hmask100Kmin.fna | \
    awk '{print $1}' | sed 's/^>//') \
  > bmori.md5map.dat

# do the indicated work in each of the following directories:
cd BSSM4GSQ_forBombyx/ && less 0README # harvests phase-sorted training data
cd gthbssmbuildDir && less 0README # trains the bssm model
cd phase_tests # optional, performs sanity checks in each subdirectory therein

# reclaim some disk space:
rm bmori_prot.min100.fpa.protein.* \
   GCF_000151625.1_ASM15162v1_genomic_hmask100Kmin.fna.dna.*
xz -T 0 allprot_vs_allgdna.gff3 bmori.md5map.dat commands.[12].list.* \
  bmori_prot.min100.fpa GCF_000151625.1_ASM15162v1_genomic_hmask100Kmin.fna \
  training_data/*_*/* \
  BSSM4GSQ_forBombyx/output/exons_introns/G?_AG/* \
  BSSM4GSQ_forBombyx/output/training_data/G?_AG/* \
  BSSM4GSQ_forBombyx/silkworm_bssm4gsq.bssm.ascii \
  gthbssmbuildDir/BSSM_train_dir/*_*/* \
  phase_tests/*_*/*_T? \
  split_gdna/*.fas \
  consensus/*.con.xml

